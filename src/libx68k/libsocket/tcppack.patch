diff --git a/src/libx68k/libsocket/gethostnamadr.c b/src/libx68k/libsocket/gethostnamadr.c
index 0784ef4aa..04f4c7ea8 100644
--- a/src/libx68k/libsocket/gethostnamadr.c
+++ b/src/libx68k/libsocket/gethostnamadr.c
@@ -4,14 +4,37 @@
  * Copyright (C) 1994 First Class Technology.
  */
 
-#include<stdio.h>
-#include<stdlib.h>
-#include<string.h>
-#include<errno.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <errno.h>
 
-#include"tcpipdrv.h"
-#include"network.h"
-#include"socket.h"
+#include <sys/socket.h>
+#include <netdb.h>
+#include "tcpipdrv.h"
+#include "network.h"
+
+int h_errno;
+
+/************************************************
+ *						*
+ ************************************************/
+static int
+res_search (char *dname, int class, int type, unsigned char *answer, int anslen)
+{
+  long args[5];
+  _ti_func func = __sock_search_ti_entry ();
+
+  args[0] = (long)dname;
+  args[1] = (long)class;
+  args[2] = (long)type;
+  args[3] = (long)answer;
+  args[4] = (long)anslen;
+
+  if (func)
+    return func (_TI_res_search, args);
+  return -1;
+}
 
 #define MAXHOSTADDR (15)
 #define MAXHOSTALIAS (15)
@@ -34,13 +57,11 @@ static unsigned short get16 (unsigned char *);
 static unsigned long get32 (unsigned char *);
 static unsigned char * get_dname (unsigned char **, unsigned char *);
 
-_ti_func search_ti_entry (void);
-
 /************************************************
  *						*
  ************************************************/
 struct hostent *
-gethostbyname (char *name)
+gethostbyname (const char *name)
 {
   struct hostent *hp;
 
@@ -49,14 +70,18 @@ gethostbyname (char *name)
     return hp;
 
   hp = _gethostbyname ((unsigned char *)name);
-  return _copyhost (hp);
+  if (hp)
+    return _copyhost (hp);
+
+  h_errno = HOST_NOT_FOUND;
+  return NULL;
 }
 
 /************************************************
  *						*
  ************************************************/
 struct hostent *
-gethostbyaddr (char *adr, int len, int type)
+gethostbyaddr (const char *adr, socklen_t len, int type)
 {
   struct hostent *hp;
 
@@ -65,7 +90,11 @@ gethostbyaddr (char *adr, int len, int type)
     return hp;
 
   hp = _gethostbyaddr ((unsigned char *)adr, len, type);
-  return _copyhost (hp);
+  if (hp)
+    return _copyhost (hp);
+
+  h_errno = HOST_NOT_FOUND;
+  return NULL;
 }
 
 /************************************************
@@ -74,7 +103,7 @@ gethostbyaddr (char *adr, int len, int type)
 static struct hostent *
 _gethostbyname (unsigned char *name)
 {
-  _ti_func func = search_ti_entry ();
+  _ti_func func = __sock_search_ti_entry ();
   if (func)
     return (struct hostent *)func (_TI_gethostbyname, (long *)name);
   return NULL;
@@ -86,7 +115,7 @@ _gethostbyname (unsigned char *name)
 static struct hostent *
 _gethostbyaddr (unsigned char *addr, int len, int type)
 {
-  _ti_func func = search_ti_entry ();
+  _ti_func func = __sock_search_ti_entry ();
   if (func)
     {
       long argv[3];
@@ -174,6 +203,8 @@ make_hostent (unsigned char *answer, int len)
 
   _host.h_name = _hostname;
   _host.h_aliases = (char **)h_aliases;
+  _host.h_addrtype = AF_INET;
+  _host.h_length = sizeof (long);
   _host.h_addr_list = (char **)h_addr_list;
 
   free_hostent ();
diff --git a/src/libx68k/libsocket/network.h b/src/libx68k/libsocket/network.h
index c613dc806..d7194d93a 100644
--- a/src/libx68k/libsocket/network.h
+++ b/src/libx68k/libsocket/network.h
@@ -7,67 +7,6 @@
 #ifndef __network_h__
 #define __network_h__
 
-/* Interface section */
-#define LOOPBACK_ADDR ((127 << 24) + 1)
-#define MAX_HW_ADDR_LEN	(16)
-
-#define IFACE_UP 	(1)
-#define	IFACE_RUNNING	(2)
-#define	IFACE_NOARP	(4)
-#define	IFACE_NOTRAIL	(8)
-#define	IFACE_BROAD	(16)
-#define	IFACE_LOOPBACK	(32)
-#define	IFACE_PTP	(64)
-
-typedef struct iface {
-  struct iface *next;
-  char *name;
-
-  int (*config) (struct iface *);
-  int (*stop) (struct iface *);
-  int (*update) (struct iface *);
-  int (*send) (struct iface *, void *, long, int, int, int, int);
-  int (*output) (struct iface *, char *, char *, long, void *);
-  void (*input) (struct iface *, void *);
-  int (*fprint) (FILE *, char *);
-  int (*sprint) (char *, char *);
-  int (*fscan) (FILE *, char *);
-  int (*sscan) (char *, char *);
-
-  int mtu;
-  long my_ip_addr;
-  long net_mask;
-  long broad_cast;
-  short arp_type;
-  short arp_ip_type;
-  short arp_hw_type;
-  int hw_addr_len;
-  char my_hw_addr[MAX_HW_ADDR_LEN];
-  char my_hw_broad_addr[MAX_HW_ADDR_LEN];
-
-  struct iface *forw;
-  int flag;
-  long ipsndcnt;
-  long rawsndcnt;
-  long snderrcnt;
-  long iprcvcnt;
-  long rawrcvcnt;
-  long rcverrcnt;
-  long collcnt;
-  long lastsent;
-
-  long data;
-} iface;
-
-/* domain name section */
-struct dns
-{
-  struct dns *prev;
-  struct dns *next;
-
-  long address;
-};
-
 /* type values for resources and queries */
 #define	T_A	1
 #define	T_NS	2
@@ -91,149 +30,4 @@ struct dns
 #define	C_IN	1
 #define C_ANY	255
 
-/* Values for opcode */
-#define QUERY	0
-#define IQUERY	1
-
-struct rrec {
-  short r_zone;			/* zone number */
-  short r_class;		/* class number */
-  short r_type;			/* type number */
-  unsigned long r_ttl;		/* time to live */
-  int r_size;			/* size of data area */
-  char *r_data;			/* pointer to data */
-};
-
-struct hostent
-{
-  char *h_name;
-  char **h_aliases;
-  int h_addrtype;
-  int h_length;
-  char **h_addr_list;
-};
-#define h_addr  h_addr_list[0]
-
-struct netent
-{
-  char *n_name;
-  char **n_aliases;
-  int n_addrtype;
-  unsigned long n_net;
-};
-
-struct protoent
-{
-  char *p_name;
-  char **p_aliases;
-  int p_proto;
-};
-
-struct servent {
-  char *s_name;
-  char **s_aliases;
-  int s_port;
-  char *s_proto;
-};
-
-/* mib section */
-struct mib_entry
-{
-  char *name;
-  union
-    {
-      long integer;
-    } value;
-};
-
-struct mib_array {
-  struct mib_entry* mib;
-  int mib_size;
-  char *name;
-};
-
-/* route section */
-#define NROUTE 5
-
-typedef struct route
-{
-  struct route *prev;
-  struct route *next;
-  long target;
-  unsigned int bits;
-  long gateway;
-  long metric;
-  struct iface *iface;
-  int flags;
-  int ttl;
-  int _ttl;
-  long uses;
-} route;
-
-typedef route *rtable[32][NROUTE];
-
-/* functions */
-long _get_version (void);
-
-char *search_arp_table (long, int, char *);
-void delete_arp_table (long);
-void add_arp_table (long, char *);
-long *get_arp_array (int *);
-
-int isipaddr (char *);
-char *n2a_ipaddr (long, char *);
-long a2n_ipaddr (char *);
-char *n2a_eaddr (char *, char *, int);
-char *a2n_eaddr (char *, char *, int);
-
-struct hostent *gethostbyname (char *);
-struct hostent *gethostbyaddr (char *, int, int);
-struct netent *getnetbyname (char *);
-struct netent *getnetbyaddr (long, int);
-struct servent *getservbyname (char *, char *);
-struct servent *getservbyport (int, char *);
-struct protoent *getprotobyname (char *);
-struct protoent *getprotobynumber (int);
-
-iface *get_new_iface (char *);
-void link_new_iface (iface *);
-long *get_my_ipaddr (int *);
-iface *get_iface_list (void);
-iface *iface_lookup (long);
-iface *iface_lookupn (char *);
-int ismyipaddr (long);
-
-rtable *rt_top (route **);
-route *rt_lookup (long);
-route *rt_lookupb (long, unsigned int);
-int rt_drop (long, unsigned int);
-route *rt_add (long, unsigned int, long, iface *, long, long, char);
-
-long *get_sock_array (int *);
-char *ntoa_sock (int, int, char *, int);
-
-struct mib_array * get_mib_list (void);
-
-int dns_add (long);
-int dns_drop (long);
-struct dns *dns_get (void);
-int set_domain_name (char *);
-char *get_domain_name (void);
-int res_query (char *, int, int, unsigned char *, int);
-int res_search (char *, int, int, unsigned char *, int);
-int res_mkquery (int, char *, int, int, char *, int, struct rrec *, char *, int);
-int res_send (char *, int, char *, int);
-
-unsigned long htonl (unsigned long);
-unsigned short htons (unsigned short);
-unsigned long ntohl (unsigned long);
-unsigned short ntohs (unsigned short);
-
-enum {
-  RIP_ON = 0,
-  RIP_OFF,
-  RIP_STAT,
-};
-
-int rip_set (int);
 #endif
diff --git a/src/libx68k/libsocket/search_ti_entry.c b/src/libx68k/libsocket/search_ti_entry.c
index 4b1eab407..b911fb9d1 100644
--- a/src/libx68k/libsocket/search_ti_entry.c
+++ b/src/libx68k/libsocket/search_ti_entry.c
@@ -4,21 +4,22 @@
  * thanks libc d_import.c
  */
 
-#include<stddef.h>
-#include<string.h>
-#define __DOS_INLINE__
-#include<sys/dos.h>
-#include"tcpipdrv.h"
+#include <stddef.h>
+#include <string.h>
+#include <x68k/dos.h>
+#include "tcpipdrv.h"
+
+#define FAST_API
 
 /* structs */
 struct _memimg {
-    struct _mep mep;
-    struct _psp psp;
+    struct dos_mep mep;
+    struct dos_psp psp;
     char prog[0];
 };
 
 /* Macros */
-#define _GETMP(psp)   ((char *) (psp) - sizeof (struct _mep))
+#define _GETMP(psp)   ((char *) (psp) - sizeof (struct dos_mep))
 #define _ISKEEPMEM(x) (((int) (x) & 0xff000000) == 0xff000000)
 
 /* file scope variables */
@@ -61,7 +62,7 @@ static trap_func trap_funcs[8] =
 **
 */
 _ti_func
-search_ti_entry (void)
+__sock_search_ti_entry (void)
 {
   long ssp;
 
@@ -108,12 +109,12 @@ search_ti_entry (void)
 /*
 **
 */
-void *
+static void *
 search_ti_sub (void)
 {
     void *addr;
     struct _memimg *ps;
-    struct _psp *psp;
+    struct dos_psp *psp;
 
     psp = _dos_getpdb ();
     addr = 0;
@@ -132,7 +133,7 @@ search_ti_sub (void)
 	  }
       }
 
-    /* addr Çï‘Ç∑ */
+    /* addr „ÇíËøî„Åô */
     return addr;
 }
 
@@ -144,11 +145,11 @@ _ti_entry (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
-		"\tmove.l\t%3,a1\n"
-		"\tjsr\t(a1)\n"
-		: "d=" (result)
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
+		"\tmove.l\t%2,%%a1\n"
+		"\tjsr\t(%%a1)\n"
+		:
 		: "g" (arg1), "g" (arg2), "g" (func)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
@@ -163,12 +164,12 @@ _ti_entry_super (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
-		"\tmove.l\t%3,-(sp)\n"
-		"\tDOS\tSUPER_JSR\n"
-		"\taddq.l\t#4,sp"
-		: "d=" (result)
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
+		"\tmove.l\t%2,-(%%sp)\n"
+		"\t.short\t0xfff6\n"	// DOS SUPER_JSR
+		"\taddq.l\t#4,%%sp"
+		:
 		: "g" (arg1), "g" (arg2), "g" (func)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
@@ -184,10 +185,10 @@ _ti_entry_trap_0 (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
 		"\ttrap\t#0\n"
-		: "d=" (result)
+		:
 		: "g" (arg1), "g" (arg2)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
@@ -202,10 +203,10 @@ _ti_entry_trap_1 (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
 		"\ttrap\t#1\n"
-		: "d=" (result)
+		:
 		: "g" (arg1), "g" (arg2)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
@@ -220,10 +221,10 @@ _ti_entry_trap_2 (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
 		"\ttrap\t#2\n"
-		: "d=" (result)
+		:
 		: "g" (arg1), "g" (arg2)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
@@ -238,10 +239,10 @@ _ti_entry_trap_3 (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
 		"\ttrap\t#3\n"
-		: "d=" (result)
+		:
 		: "g" (arg1), "g" (arg2)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
@@ -256,10 +257,10 @@ _ti_entry_trap_4 (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
 		"\ttrap\t#4\n"
-		: "d=" (result)
+		:
 		: "g" (arg1), "g" (arg2)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
@@ -274,10 +275,10 @@ _ti_entry_trap_5 (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
 		"\ttrap\t#5\n"
-		: "d=" (result)
+		:
 		: "g" (arg1), "g" (arg2)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
@@ -292,10 +293,10 @@ _ti_entry_trap_6 (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
 		"\ttrap\t#6\n"
-		: "d=" (result)
+		:
 		: "g" (arg1), "g" (arg2)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
@@ -310,10 +311,10 @@ _ti_entry_trap_7 (long arg1, void *arg2)
 {
   register long result asm ("d0");
 
-  asm volatile ("move.l\t%2,a0\n"
-		"\tmove.l\t%1,d0\n"
+  asm volatile ("move.l\t%1,%%a0\n"
+		"\tmove.l\t%0,%%d0\n"
 		"\ttrap\t#7\n"
-		: "d=" (result)
+		:
 		: "g" (arg1), "g" (arg2)
 		: "d0", "d1", "d2", "a0", "a1", "a2");
 
diff --git a/src/libx68k/libsocket/tcpipdrv.h b/src/libx68k/libsocket/tcpipdrv.h
index 37fea644d..ef05e48e5 100644
--- a/src/libx68k/libsocket/tcpipdrv.h
+++ b/src/libx68k/libsocket/tcpipdrv.h
@@ -83,5 +83,8 @@ typedef enum
 } cmd;
 
 typedef long (*_ti_func) (long, void *);
+extern _ti_func __sock_func;
+
+_ti_func __sock_search_ti_entry (void);
 
 #endif
